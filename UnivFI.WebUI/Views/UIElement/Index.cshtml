@model UnivFI.WebUI.ViewModels.UIElement.UIElementListViewModel

@{
    ViewData["Title"] = "UI 요소 관리";
}

<div class="container mx-auto px-4 py-6">
    <h1 class="text-2xl font-bold mb-4">UI 요소 관리</h1>
    <div class="h-0.5 bg-gray-200 w-full mb-6"></div>

    <div class="flex flex-col md:flex-row justify-between items-center mb-6 gap-4">
        <div>
            <a href="@Url.Action("Create")"
                class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">
                <i class="fas fa-plus mr-2"></i> 새 UI 요소 추가
            </a>
        </div>
        <div class="w-full md:w-auto">
            <form asp-action="Index" method="get" class="flex" id="searchForm">
                <div class="flex">
                    <div class="relative">
                        <button id="searchDropdown" type="button"
                            class="px-4 py-2 bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors rounded-l flex items-center">
                            검색 필드
                            <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="searchDropdownMenu"
                            class="absolute left-0 mt-1 w-48 bg-white rounded-md shadow-lg hidden z-10 border">
                            <div class="py-1">
                                <div class="px-4 py-2">
                                    <div class="flex items-center">
                                        <input type="checkbox" id="checkElementKey" class="search-field-checkbox mr-2"
                                            value="ElementKey">
                                        <label for="checkElementKey">키</label>
                                    </div>
                                </div>
                                <div class="px-4 py-2">
                                    <div class="flex items-center">
                                        <input type="checkbox" id="checkElementName" class="search-field-checkbox mr-2"
                                            value="ElementName">
                                        <label for="checkElementName">이름</label>
                                    </div>
                                </div>
                                <div class="px-4 py-2">
                                    <div class="flex items-center">
                                        <input type="checkbox" id="checkDescription" class="search-field-checkbox mr-2"
                                            value="Description">
                                        <label for="checkDescription">설명</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" name="searchFields" id="searchFieldsInput" value="@Model.SearchFields">
                    <input type="text" name="searchTerm" value="@Model.SearchTerm"
                        class="px-4 py-2 border focus:ring-blue-500 focus:border-blue-500 flex-1 min-w-0"
                        placeholder="검색어를 입력하세요">
                    <input type="hidden" name="page" id="currentPage" value="@Model.Page">
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 transition-colors">
                        <i class="fas fa-search"></i> 검색
                    </button>
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <a asp-action="Index"
                            class="px-4 py-2 bg-gray-300 text-gray-700 rounded-r hover:bg-gray-400 transition-colors">
                            <i class="fas fa-times"></i> 초기화
                        </a>
                    }
                </div>
            </form>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-md">
        <div class="bg-gray-50 px-6 py-4 border-b">
            <h2 class="font-semibold text-lg">UI 요소 목록</h2>
        </div>
        <div class="p-6">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                키
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                이름
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                타입
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                설명
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                생성일
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                액션
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var item in Model.Items)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                    @item.ElementKey
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @item.ElementName
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span
                                        class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                        @item.ElementType
                                    </span>
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-500 max-w-xs truncate">
                                    @(string.IsNullOrEmpty(item.Description) ? "-" : item.Description)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    @item.CreatedAt?.ToString("yyyy-MM-dd")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex justify-center space-x-2">
                                        <a href="@Url.Action("Edit", new { id = item.Id, page = Model.Page, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, searchFields = Model.SearchFields })"
                                            class="px-3 py-1 bg-yellow-500 text-white text-sm rounded hover:bg-yellow-600 transition-colors">
                                            <i class="fas fa-edit mr-1"></i> 수정
                                        </a>
                                        <a href="@Url.Action("Details", new { id = item.Id, page = Model.Page, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, searchFields = Model.SearchFields })"
                                            class="px-3 py-1 bg-blue-500 text-white text-sm rounded hover:bg-blue-600 transition-colors">
                                            <i class="fas fa-eye mr-1"></i> 상세
                                        </a>
                                        <button type="button"
                                            class="px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700 transition-colors"
                                            onclick="openDeleteModal(@item.Id, '@item.ElementName', @Model.Page, @Model.PageSize, '@Model.SearchTerm', '@Model.SearchFields')">
                                            <i class="fas fa-trash mr-1"></i> 삭제
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="paginationContainer" class="mt-4">
                @if (Model.TotalPages > 1)
                {
                    <div class="flex justify-between items-center">
                        <div class="text-sm text-gray-600">
                            전체 @Model.TotalItems 항목 중 @Model.StartItemIndex-@Model.EndItemIndex 표시 중
                        </div>
                        <div class="flex space-x-1">
                            @if (Model.HasPreviousPage)
                            {
                                <a href="@Url.Action("Index", new { page = Model.PreviousPage, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, searchFields = Model.SearchFields })"
                                    class="px-3 py-1 bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-100">
                                    이전
                                </a>
                            }

                            @for (int i = Math.Max(1, Model.Page - 2); i <= Math.Min(Model.TotalPages, Model.Page + 2); i++)
                            {
                                <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, searchFields = Model.SearchFields })"
                                    class="px-3 py-1 @(i == Model.Page ? "bg-blue-600 text-white" : "bg-white text-gray-700 border border-gray-300 hover:bg-gray-100") rounded">
                                    @i
                                </a>
                            }

                            @if (Model.HasNextPage)
                            {
                                <a href="@Url.Action("Index", new { page = Model.NextPage, pageSize = Model.PageSize, searchTerm = Model.SearchTerm, searchFields = Model.SearchFields })"
                                    class="px-3 py-1 bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-100">
                                    다음
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- 삭제 확인 모달 -->
<div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white rounded-lg max-w-md w-full p-6">
        <div class="mb-4">
            <h3 class="text-lg font-semibold" id="deleteModalTitle">UI 요소 삭제 확인</h3>
        </div>
        <div class="mb-6">
            <p id="deleteModalMessage">UI 요소를 삭제하시겠습니까?</p>
            <p class="text-red-600 mt-2">이 작업은 되돌릴 수 없습니다.</p>
        </div>
        <div class="flex justify-end space-x-3">
            <button type="button"
                class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors"
                onclick="closeDeleteModal()">
                취소
            </button>
            <form id="deleteForm" method="post">
                <input type="hidden" id="deletePage" name="page" value="1" />
                <input type="hidden" id="deletePageSize" name="pageSize" value="10" />
                <input type="hidden" id="deleteSearchTerm" name="searchTerm" value="" />
                <input type="hidden" id="deleteSearchFields" name="searchFields" value="" />
                <button type="submit"
                    class="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors">
                    삭제
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // 검색 드롭다운 토글
            $('#searchDropdown').click(function () {
                $('#searchDropdownMenu').toggleClass('hidden');
            });

            // 검색 필드 체크박스 이벤트 처리
            $('.search-field-checkbox').change(function () {
                updateSearchFields();
            });

            // 검색 필드 업데이트
            function updateSearchFields() {
                var selectedFields = [];
                $('.search-field-checkbox:checked').each(function () {
                    selectedFields.push($(this).val());
                });
                $('#searchFieldsInput').val(selectedFields.join(','));
            }

            // 페이지 로드 시 이전 검색 필드 상태 복원 또는 모든 체크박스 선택
            var savedSearchFields = '@Model.SearchFields'.split(',');
            if (!savedSearchFields[0]) {
                // 저장된 검색 필드가 없는 경우 모든 체크박스 선택
                $('.search-field-checkbox').prop('checked', true);
                // 검색 필드 업데이트
                updateSearchFields();
            } else {
                // 저장된 검색 필드가 있는 경우 해당 체크박스만 선택
                savedSearchFields.forEach(function (field) {
                    if (field) {
                        $(`#check${field}`).prop('checked', true);
                    }
                });
            }

            // 검색 폼 제출 시 처리
            $('#searchForm').submit(function () {
                updateSearchFields();
                return true;
            });
        });

        // 삭제 모달 열기
        function openDeleteModal(id, name, page, pageSize, searchTerm, searchFields) {
            $('#deleteModalTitle').text('UI 요소 삭제 확인');
            $('#deleteModalMessage').text(`"${name}" UI 요소를 삭제하시겠습니까?`);
            $('#deleteForm').attr('action', `/UIElement/Delete/${id}`);

            // 페이징 및 검색 매개변수 설정
            $('#deletePage').val(page || 1);
            $('#deletePageSize').val(pageSize || 10);
            $('#deleteSearchTerm').val(searchTerm || '');
            $('#deleteSearchFields').val(searchFields || '');

            $('#deleteModal').removeClass('hidden');
        }

        // 삭제 모달 닫기
        function closeDeleteModal() {
            $('#deleteModal').addClass('hidden');
        }
    </script>
}