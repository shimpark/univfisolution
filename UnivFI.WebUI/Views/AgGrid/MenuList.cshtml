@{
    ViewData["Title"] = "메뉴 관리 - AG Grid";
}

@section Styles {
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community@33.2.1/styles/ag-grid.css">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ag-grid-community@33.2.1/styles/ag-theme-alpine.css">
            <style>
                /* AG Grid 테마 커스터마이징 */
                .ag-theme-alpine {
                    --ag-header-height: 48px;
                    --ag-header-foreground-color: #1f2937;
                    --ag-header-background-color: #f9fafb;
                    --ag-header-cell-hover-background-color: #f3f4f6;
                    --ag-header-column-separator-display: block;
                    --ag-header-column-separator-color: #e5e7eb;
            
                    --ag-font-size: 14px;
                    --ag-font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            
                    --ag-row-hover-color: #f9fafb;
                    --ag-row-border-color: #f3f4f6;
                    --ag-cell-horizontal-padding: 1rem;
            
                    --ag-selected-row-background-color: #eef2ff;
                    --ag-range-selection-border-color: #6366f1;
            
                    --ag-checkbox-checked-color: #6366f1;
                    --ag-checkbox-background-color: white;
                    --ag-checkbox-border-radius: 0.25rem;
            
                    /* 페이지네이션 스타일링 */
                    --ag-pagination-button-color: #4b5563;
                    --ag-pagination-button-disabled-color: #d1d5db;
                    --ag-pagination-background-color: #ffffff;
            
                    /* 테두리 및 그림자 */
                    --ag-borders: solid 1px;
                    --ag-border-color: #f3f4f6;
                    --ag-borders-row: none;
                    --ag-borders-critical: solid 1px var(--ag-border-color);
                    --ag-row-border-style: solid;
                    --ag-row-border-width: 1px 0;
            
                    /* 반응형 높이 */
                    height: 100%;
            
                    /* 필터 패널 */
                    --ag-popup-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
                    --ag-card-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
                    --ag-card-radius: 0.5rem;
                }
        
                /* 그리드 외부 컨테이너 */
                #wrapper {
                    width: 100%;
                    border-radius: 0.75rem;
                    background-color: white;
                    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
                    overflow: hidden;
                    height: 700px;
                }

                /* 그리드 래퍼 */
                #myGrid {
                    height: 100%;
                    width: 100%;
                }
        
                /* 헤더 텍스트 가운데 정렬 */
                .centered .ag-header-cell-label {
                    justify-content: center;
                }
        
                /* 작업 버튼 스타일링 */
                .action-buttons {
                    display: flex;
                    gap: 0.5rem;
                    justify-content: center;
                }

                .action-button {
                    padding: 0.5rem;
                    border-radius: 0.375rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    transition-property: all;
                    transition-duration: 200ms;
                    outline: none;
                }
        
                .action-button:focus {
                    outline: none;
                    box-shadow: 0 0 0 2px white, 0 0 0 4px #6366f1;
                }

                .action-button.edit {
                    background-color: #4f46e5;
                    color: white;
                }
        
                .action-button.edit:hover {
                    background-color: #4338ca;
                }

                .action-button.delete {
                    background-color: #e11d48;
                    color: white;
                }
        
                .action-button.delete:hover {
                    background-color: #be123c;
                }

                .action-button svg {
                    height: 1rem;
                    width: 1rem;
                }
        
                /* New 아이콘 스타일링 */
                .new-icon-cell {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }

                .new-icon-cell .indicator {
                    width: 0.75rem;
                    height: 0.75rem;
                    border-radius: 9999px;
                    margin-right: 0.5rem;
                }

                .new-icon-cell .indicator.active {
                    background-color: #10b981;
                }

                .new-icon-cell .indicator.inactive {
                    background-color: #d1d5db;
                }

                .new-icon-cell .text {
                    font-size: 0.875rem;
                }

                .new-icon-cell .text.active {
                    color: #047857;
                    font-weight: 500;
                }

                .new-icon-cell .text.inactive {
                    color: #6b7280;
                }
        
                /* 메뉴 추가 버튼 스타일링 */
                .btn-add-menu {
                    display: inline-flex;
                    align-items: center;
                    padding: 0.5rem 1rem;
                    border: 1px solid transparent;
                    border-radius: 0.375rem;
                    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
                    font-size: 0.875rem;
                    font-weight: 500;
                    color: white;
                    background-color: #4f46e5;
                    transition-property: background-color;
                    transition-duration: 200ms;
                }
        
                .btn-add-menu:hover {
                    background-color: #4338ca;
                }
        
                .btn-add-menu:focus {
                    outline: none;
                    box-shadow: 0 0 0 2px white, 0 0 0 4px #4f46e5;
                }
        
                /* 검색 입력창 스타일링 */
                .search-input {
                    display: block;
                    width: 100%;
                    padding-left: 2.5rem;
                    padding-right: 0.75rem;
                    padding-top: 0.5rem;
                    padding-bottom: 0.5rem;
                    border: 1px solid #d1d5db;
                    border-radius: 0.375rem;
                    line-height: 1.25;
                    background-color: white;
                    color: #111827;
                    transition-property: all;
                    transition-duration: 150ms;
                    transition-timing-function: ease-in-out;
                }
        
                .search-input::placeholder {
                    color: #9ca3af;
                }
        
                .search-input:focus {
                    outline: none;
                    border-color: #6366f1;
                    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
                }
        
                .search-input:focus::placeholder {
                    color: #9ca3af;
                }
        
                /* 페이지 사이즈 선택기 스타일링 */
                .page-size-select {
                    display: block;
                    width: 6rem;
                    padding-left: 0.75rem;
                    padding-right: 2.5rem;
                    padding-top: 0.5rem;
                    padding-bottom: 0.5rem;
                    border: 1px solid #d1d5db;
                    border-radius: 0.375rem;
                    font-size: 0.875rem;
                }
        
                .page-size-select:focus {
                    outline: none;
                    border-color: #6366f1;
                    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
                }
        
                /* 텍스트 중앙 정렬 */
                .text-center {
                    text-align: center;
                }
            </style>
}

<div class="py-6 bg-gray-50 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- 헤더 영역 -->
        <div class="md:flex md:items-center md:justify-between mb-6">
            <div class="flex-1 min-w-0">
                <h1 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">메뉴 관리</h1>
                <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6">
                    <div class="mt-2 flex items-center text-sm text-gray-500">
                        <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                        </svg>
                        메뉴 목록 및 권한 관리
                    </div>
                </div>
            </div>
            <div class="mt-4 flex space-x-3 md:mt-0">
                <button id="btnAddMenu" type="button" class="btn-add-menu">
                    <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    메뉴 추가
                </button>
            </div>
        </div>

        <!-- 검색 및 필터 영역 -->
        <div class="mb-5 bg-white p-4 rounded-lg shadow-sm border border-gray-200">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
                <div class="w-full sm:w-64 relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                    <input type="text" id="searchInput" class="search-input" 
                        placeholder="메뉴명, URL 등으로 검색..." />
                </div>
                <div class="flex items-center">
                    <label for="pageSize" class="mr-2 text-sm text-gray-600">페이지당 표시:</label>
                    <select id="pageSize" class="page-size-select">
                        <option value="10">10개</option>
                        <option value="20">20개</option>
                        <option value="50">50개</option>
                        <option value="100">100개</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- 메인 컨텐츠 영역 -->
        <div id="wrapper">
            <div id="myGrid" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>

@section Scripts {
                    <script src="https://cdn.jsdelivr.net/npm/ag-grid-community@33.2.1/dist/ag-grid-community.min.js"></script>
                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            let gridApi;
                            let columnApi;
                            let searchTimeout;
            
                            // 메뉴 키에 들여쓰기 적용하는 cellRenderer
                            function menuKeyRenderer(params) {
                                if (!params.data) return '';
                                const indent = '&nbsp;'.repeat(params.data.levels * 4);
                                const span = document.createElement('span');
                                span.innerHTML = indent + params.value;
                                return span;
                            }
            
                            // 상위 메뉴 표시용 renderer
                            function parentMenuRenderer(params) {
                                if (!params.data) return '';
                                return params.value ? params.value.toString() : '최상위';
                            }
            
                            // New 아이콘 표시용 renderer
                            function newIconRenderer(params) {
                                if (!params.data) return '';
                
                                const isActive = params.value;
                                const container = document.createElement('div');
                                container.className = 'new-icon-cell';
                
                                const indicator = document.createElement('span');
                                indicator.className = 'indicator ' + (isActive ? 'active' : 'inactive');
                
                                const text = document.createElement('span');
                                text.className = 'text ' + (isActive ? 'active' : 'inactive');
                                text.innerText = isActive ? '사용' : '미사용';
                
                                container.appendChild(indicator);
                                container.appendChild(text);
                
                                return container;
                            }
            
                            // 작업 버튼 renderer
                            function actionButtonsRenderer(params) {
                                if (!params.data) return '';
                
                                const container = document.createElement('div');
                                container.className = 'action-buttons';
                
                                // 편집 버튼
                                const editButton = document.createElement('button');
                                editButton.className = 'action-button edit';
                                editButton.setAttribute('data-id', params.data.id);
                                editButton.innerHTML = `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24" class="h-4 w-4">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                        d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                </svg>`;
                
                                // 삭제 버튼
                                const deleteButton = document.createElement('button');
                                deleteButton.className = 'action-button delete';
                                deleteButton.setAttribute('data-id', params.data.id);
                                deleteButton.innerHTML = `<svg fill="none" stroke="currentColor" viewBox="0 0 24 24" class="h-4 w-4">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                        d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                </svg>`;
                
                                container.appendChild(editButton);
                                container.appendChild(deleteButton);
                
                                return container;
                            }
            
                            // URL 링크 renderer
                            function urlRenderer(params) {
                                if (!params.data || !params.value) return '';
                
                                const url = params.value;
                                const link = document.createElement('a');
                                link.href = url;
                                link.target = '_blank';
                                link.className = 'text-indigo-600 hover:text-indigo-900 hover:underline';
                                link.innerText = url;
                
                                return link;
                            }

                            // AG Grid 컬럼 정의
                            const columnDefs = [
                                { 
                                    field: 'id', 
                                    headerName: 'ID', 
                                    sortable: true, 
                                    width: 80,
                                    headerClass: 'centered',
                                    cellClass: 'text-center'
                                },
                                { 
                                    field: 'menuKey', 
                                    headerName: '메뉴 키', 
                                    sortable: true,
                                    cellRenderer: menuKeyRenderer,
                                    filter: 'agTextColumnFilter'
                                },
                                { 
                                    field: 'title', 
                                    headerName: '메뉴명', 
                                    sortable: true,
                                    filter: 'agTextColumnFilter'
                                },
                                { 
                                    field: 'url', 
                                    headerName: 'URL', 
                                    sortable: true, 
                                    flex: 1,
                                    filter: 'agTextColumnFilter',
                                    cellRenderer: urlRenderer
                                },
                                { 
                                    field: 'parentId', 
                                    headerName: '상위 메뉴',
                                    sortable: true,
                                    filter: 'agNumberColumnFilter',
                                    valueFormatter: parentMenuRenderer
                                },
                                { 
                                    field: 'menuOrder', 
                                    headerName: '순서', 
                                    sortable: true, 
                                    width: 100,
                                    filter: 'agNumberColumnFilter',
                                    headerClass: 'centered',
                                    cellClass: 'text-center'
                                },
                                {
                                    field: 'useNewIcon',
                                    headerName: 'New 아이콘',
                                    width: 120,
                                    cellRenderer: newIconRenderer,
                                    headerClass: 'centered'
                                },
                                {
                                    headerName: '작업',
                                    width: 120,
                                    cellRenderer: actionButtonsRenderer,
                                    sortable: false,
                                    filter: false,
                                    headerClass: 'centered'
                                }
                            ];

                            // 데이터 소스 생성 함수
                            function createDataSource() {
                                return {
                                    getRows: function (params) {
                                        console.log('getRows 요청 파라미터:', params);
                        
                                        const page = Math.floor(params.startRow / gridOptions.cacheBlockSize) + 1;
                                        let sortParams = '';

                                        // 정렬 파라미터 처리
                                        if (params.sortModel && params.sortModel.length > 0) {
                                            const { colId, sort } = params.sortModel[0];
                                            sortParams = `&sortColumn=${colId}&ascending=${sort === 'asc'}`;
                                        }
                        
                                        // 검색어 처리
                                        const searchTerm = document.getElementById('searchInput').value.trim();
                                        const searchParam = searchTerm ? `&searchTerm=${encodeURIComponent(searchTerm)}` : '';

                                        const url = `/AgGrid/GetMenuData?page=${page}&pageSize=${gridOptions.cacheBlockSize}${sortParams}${searchParam}`;
                                        console.log('요청 URL:', url);

                                        fetch(url)
                                            .then(response => {
                                                if (!response.ok) {
                                                    throw new Error(`HTTP 오류! 상태: ${response.status}`);
                                                }
                                                return response.json();
                                            })
                                            .then(data => {
                                                console.log('서버 응답 데이터:', data);

                                                // 데이터 로드 완료 콜백
                                                // 서버에서 이미 levels 정보가 포함되어 있으므로 레벨 계산 로직 제거
                                                params.successCallback(data.items, data.totalCount);
                                            })
                                            .catch(error => {
                                                console.error('데이터 로딩 중 오류 발생:', error);
                                                params.failCallback();
                                            });
                                    }
                                };
                            }

                            // AG Grid 옵션 설정
                            const gridOptions = {
                                columnDefs: columnDefs,
                                rowModelType: 'infinite',
                                defaultColDef: {
                                    resizable: true,
                                    sortable: true,
                                    filter: true,
                                    minWidth: 120
                                },
                
                                pagination: true,
                                paginationPageSizeSelector: [10, 20, 50, 100],
                                paginationPageSize: 10,
                                cacheBlockSize: 10, 
                                maxBlocksInCache: 5,
                                animateRows: true,
                
                                // 그리드 이벤트 핸들러
                                onSortChanged: () => {
                                    const newDataSource = createDataSource();
                                    gridApi.setGridOption('datasource', newDataSource);
                                },
                
                                onFilterChanged: () => {
                                    const newDataSource = createDataSource();
                                    gridApi.setGridOption('datasource', newDataSource);
                                },
                
                                // 행 높이 설정
                                rowHeight: 48,
                                headerHeight: 48,
                
                                // 한글 로케일
                                localeText: {
                                    page: '페이지',
                                    more: '더보기',
                                    to: '에서',
                                    of: '중',
                                    next: '다음',
                                    last: '마지막',
                                    first: '처음',
                                    previous: '이전',
                                    loadingOoo: '로딩중...',
                                    selectAll: '전체 선택',
                                    searchOoo: '검색...',
                                    blanks: '공백',
                                    filterOoo: '',
                                    contains: '포함',
                                    doesNotContain: '포함하지 않음',
                                    beginsWith: '시작하는',
                                    endsWith: '끝나는',
                                    blank: '공백',
                                    notblank: '공백이 아님',
                                    applyFilter: '필터 적용',
                                    equals: '같음',
                                    notEqual: '같지 않음',
                                    noRowsToShow: '표시할 데이터가 없습니다.',
                                    pageSize: '페이지 크기',
                                }
                            };

                            // AG Grid 생성
                            const gridDiv = document.querySelector('#myGrid');
                            gridApi = agGrid.createGrid(gridDiv, gridOptions);

                            // 초기 데이터 로드
                            const dataSource = createDataSource();
                            gridApi.setGridOption('datasource', dataSource);

                            // 검색 이벤트 처리
                            document.getElementById('searchInput').addEventListener('input', e => {
                                clearTimeout(searchTimeout);
                                searchTimeout = setTimeout(() => {
                                    if (gridApi) {
                                        const dataSource = createDataSource();
                                        gridApi.setGridOption('datasource', dataSource);
                                    }
                                }, 500);
                            });
            
                            // 페이지 크기 변경 이벤트 처리
                            document.getElementById('pageSize').addEventListener('change', e => {
                                if (gridApi) {
                                    gridApi.paginationSetPageSize(Number(e.target.value));
                                    const dataSource = createDataSource();
                                    gridApi.setGridOption('datasource', dataSource);
                                }
                            });

                            // 메뉴 추가 버튼 이벤트
                            document.getElementById('btnAddMenu').addEventListener('click', () => {
                                window.location.href = '/AgGrid/CreateMenu';
                            });

                            // 편집/삭제 버튼 이벤트 처리
                            document.addEventListener('click', e => {
                                // 편집 버튼 클릭
                                if (e.target.closest('.action-button.edit')) {
                                    const id = e.target.closest('.action-button.edit').dataset.id;
                                    window.location.href = `/AgGrid/EditMenu/${id}`;
                                }
                                // 삭제 버튼 클릭
                                else if (e.target.closest('.action-button.delete')) {
                                    const id = e.target.closest('.action-button.delete').dataset.id;
                                    if (confirm('정말로 이 메뉴를 삭제하시겠습니까?')) {
                                        deleteMenu(id);
                                    }
                                }
                            });

                            // 메뉴 삭제 함수
                            async function deleteMenu(id) {
                                try {
                                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                                    const response = await fetch(`/AgGrid/DeleteMenu/${id}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'X-CSRF-TOKEN': token
                                        }
                                    });
                    
                                    if (!response.ok) {
                                        throw new Error('메뉴 삭제 실패');
                                    }
                    
                                    const result = await response.json();
                                    if (result.success) {
                                        alert('메뉴가 성공적으로 삭제되었습니다.');
                        
                                        // 그리드 데이터 새로고침
                                        const dataSource = createDataSource();
                                        gridApi.setGridOption('datasource', dataSource);
                                    } else {
                                        throw new Error(result.message || '메뉴 삭제 실패');
                                    }
                                } catch (error) {
                                    console.error('삭제 오류:', error);
                                    alert('메뉴 삭제 중 오류가 발생했습니다.');
                                }
                            }
                        });
                    </script>
}
