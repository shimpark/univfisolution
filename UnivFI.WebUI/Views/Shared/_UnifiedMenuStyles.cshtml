<!-- 선택된 메뉴 스타일을 위한 CSS -->
<style>
    /* 선택된 상위 메뉴 스타일 */
    .sidebar-menu-item.active {
        background-color: rgba(5, 150, 105, 0.15) !important;
        /* 더 은은한 녹색 배경 */
        color: #e2e8f0 !important;
        /* 밝은 회색으로 변경 */
        font-weight: 400;
    }

    /* 선택된 하위 메뉴 스타일 */
    .sidebar-submenu-item.active {
        background-color: rgba(5, 150, 105, 0.2) !important;
        /* 약간 더 진한 녹색 */
        color: #f1f5f9 !important;
        font-weight: 400;
        border-left: 2px solid rgba(16, 185, 129, 0.6);
        /* 반투명한 보더 */
    }

    /* 메뉴 호버 효과 */
    .sidebar-menu-item:hover {
        background-color: rgba(5, 150, 105, 0.08);
        /* 매우 은은한 호버 효과 */
    }

    /* 하위 메뉴 컨테이너 스타일 */
    .submenu-container {
        background-color: rgba(5, 150, 105, 0.03);
        /* 매우 은은한 배경 */
    }
</style>

<!-- 메뉴 관련 Alpine.js 스크립트 -->
<script>
    // 현재 컨트롤러 가져오기
    window.currentController = '@ViewContext.RouteData.Values["controller"]' || '';

    // 메뉴 공통 함수
    function getMenuFunctions() {
        return {
            // 컨트롤러 기준으로 메뉴 활성화 여부 확인
            isControllerActive(controller) {
                if (!controller) return false;
                const currentController = window.currentController || '';
                return currentController.toLowerCase() === controller.toLowerCase();
            },

            // URL에서 컨트롤러 추출
            getControllerFromUrl(url) {
                if (!url || url === '#' || url === '.') return '';

                // URL에서 경로 부분만 추출 (쿼리 문자열 및 해시 제거)
                const urlPath = url.split('?')[0].split('#')[0];

                // 경로를 '/'로 분할하고 빈 문자열 제거
                const parts = urlPath.split('/').filter(p => p);

                // 두 번째 요소가 컨트롤러 (첫 번째는 일반적으로 비어 있거나 도메인)
                if (parts.length >= 1) {
                    return parts[0];
                }

                return '';
            },

            // 메뉴 아이템이 활성화되었는지 확인
            isMenuActive(menuItem) {
                // area 정보를 포함한 현재 경로 가져오기
                const currentPath = window.location.pathname.toLowerCase();

                // area가 포함된 경로인지 확인 (예: /Admin/...)
                const isAreaPath = currentPath.startsWith('/admin/');

                // 현재 메뉴나 서브메뉴 중 하나라도 현재 경로와 일치하는지 확인
                const isActive = menuItem.url && currentPath.startsWith(menuItem.url.toLowerCase()) ||
                    menuItem.submenus?.some(submenu =>
                        submenu.url && currentPath.startsWith(submenu.url.toLowerCase())
                    );

                return isActive;
            },

            // 하위 메뉴가 활성화되었는지 확인 (컨트롤러만 비교)
            isSubmenuActive(submenu) {
                if (!submenu.url) return false;

                // area 정보를 포함한 현재 경로 가져오기
                const currentPath = window.location.pathname.toLowerCase();
                const submenuPath = submenu.url.toLowerCase();

                // 정확한 경로 매칭 (area 포함)
                return currentPath.startsWith(submenuPath);
            }
        };
    }
</script>