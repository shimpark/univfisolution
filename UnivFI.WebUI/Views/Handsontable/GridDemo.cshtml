@{
    ViewData["Title"] = "Grid.js 데모 - 메뉴 목록";
}

@section Styles {
    <link href="https://unpkg.com/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <div class="p-6 sm:p-8">
                <div class="flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0 mb-8">
                    <h1 class="text-2xl sm:text-3xl font-bold text-gray-900">메뉴 관리</h1>
                    <button id="btnAddMenu" class="w-full sm:w-auto inline-flex justify-center items-center px-6 py-3 border border-transparent 
                                   text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 
                                   focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 
                                   transition-colors duration-200">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                        </svg>
                        메뉴 추가
                    </button>
                </div>

                <div id="menuGrid" class="overflow-hidden rounded-lg border border-gray-200"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>
    <script>
        $(function () {
            const csrfToken = $('input[name="__RequestVerificationToken"]').val();

            const grid = new gridjs.Grid({
                columns: [
                    {
                        id: 'id',
                        name: 'ID',
                        sort: true,
                        hidden: true
                    },
                    {
                        id: 'menuKey',
                        name: '메뉴 키',
                        sort: true,
                        width: '150px'
                    },
                    {
                        id: 'title',
                        name: '메뉴명',
                        sort: true,
                        width: '200px'
                    },
                    {
                        id: 'url',
                        name: 'URL',
                        sort: true,
                        width: '200px'
                    },
                    {
                        id: 'parentId',
                        name: '상위 메뉴',
                        sort: true,
                        width: '150px'
                    },
                    {
                        id: 'menuOrder',
                        name: '순서',
                        sort: true,
                        width: '80px'
                    },
                    {
                        id: 'levels',
                        name: '레벨',
                        sort: true,
                        width: '80px'
                    },
                    {
                        id: 'useNewIcon',
                        name: 'New 아이콘',
                        width: '120px',
                        formatter: cell => gridjs.html(`
                                    <span class="inline-flex items-center">
                                        ${cell ?
                                '<span class="flex items-center"><span class="h-3 w-3 rounded-full bg-green-500 mr-2"></span><span class="text-green-700 font-medium">사용</span></span>' :
                                '<span class="flex items-center"><span class="h-3 w-3 rounded-full bg-gray-300 mr-2"></span><span class="text-gray-500">미사용</span></span>'}
                                    </span>
                                `)
                    },
                    {
                        id: 'actions',
                        name: '관리',
                        width: '180px',
                        formatter: (_, row) => gridjs.html(`
                                    <div class="flex space-x-2">
                                        <button 
                                            class="btn-edit inline-flex items-center px-3 py-1.5 border border-transparent text-sm 
                                                   font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 
                                                   focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 
                                                   transition-colors duration-200"
                                            data-id="${row.cells[0].data}">
                                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                            </svg>
                                            수정
                                        </button>
                                        <button 
                                            class="btn-delete inline-flex items-center px-3 py-1.5 border border-transparent text-sm 
                                                   font-medium rounded-md text-white bg-red-600 hover:bg-red-700 
                                                   focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 
                                                   transition-colors duration-200"
                                            data-id="${row.cells[0].data}">
                                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                            </svg>
                                            삭제
                                        </button>
                                    </div>
                                `)
                    }
                ],
                server: {
                    url: '/Handsontable/GetHierarchicalMenuData',
                    then: response => response.items.map(menu => [
                        menu.id,
                        menu.menuKey,
                        menu.title,
                        menu.url,
                        menu.parentId,
                        menu.menuOrder,
                        menu.levels,
                        menu.useNewIcon
                    ]),
                    total: response => response.totalCount,
                    headers: {
                        'X-CSRF-TOKEN': csrfToken
                    }
                },
                search: {
                    server: {
                        url: (prev, keyword) => `${prev}?searchTerm=${keyword}`
                    }
                },
                pagination: {
                    limit: 10,
                    server: {
                        url: (prev, page, limit) => {
                            return `${prev}${prev.includes('?') ? '&' : '?'}page=${page + 1}&pageSize=${limit}`;
                        }
                    }
                },
                sort: {
                    server: {
                        url: (prev, columns) => {
                            if (!columns.length) return prev;
                            const column = columns[0];
                            const columnId = grid.config.columns[column.index].id;
                            return `${prev}${prev.includes('?') ? '&' : '?'}sortColumn=${columnId}&ascending=${column.direction === 1}`;
                        }
                    }
                },
                language: {
                    search: {
                        placeholder: '검색어를 입력하세요...'
                    },
                    pagination: {
                        previous: '이전',
                        next: '다음',
                        showing: '표시 중',
                        results: () => '건',
                        of: '/'
                    },
                    loading: '데이터를 불러오는 중...',
                    noRecordsFound: '데이터가 없습니다.',
                    error: '데이터를 불러오는 중 오류가 발생했습니다.'
                },
                className: {
                    table: 'w-full border-collapse bg-white',
                    thead: 'bg-gray-50',
                    th: 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200',
                    tbody: 'divide-y divide-gray-200',
                    td: 'px-6 py-4 whitespace-nowrap text-sm text-gray-700',
                    footer: 'bg-white px-6 py-4 border-t border-gray-200',
                    pagination: 'py-3 flex items-center justify-between',
                    loading: 'py-4 text-center text-gray-600',
                    notfound: 'py-4 text-center text-gray-600',
                    error: 'py-4 text-center text-red-600'
                }
            }).render(document.getElementById('menuGrid'));

            // 이벤트 핸들러
            $('#btnAddMenu').on('click', () => window.location.href = '/Handsontable/CreateMenu');

            $(document).on('click', '.btn-edit', function () {
                const id = $(this).data('id');
                window.location.href = `/Handsontable/EditMenu/${id}`;
            });

            $(document).on('click', '.btn-delete', function () {
                const id = $(this).data('id');
                if (confirm('정말로 이 메뉴를 삭제하시겠습니까?')) {
                    $.ajax({
                        url: `/Handsontable/DeleteMenu/${id}`,
                        type: 'DELETE',
                        headers: { 'X-CSRF-TOKEN': csrfToken },
                        success: function () {
                            alert('메뉴가 성공적으로 삭제되었습니다.');
                            window.location.reload();
                        },
                        error: function (xhr) {
                            alert(`메뉴 삭제 중 오류가 발생했습니다: ${xhr.responseText || '알 수 없는 오류'}`);
                        }
                    });
                }
            });
        });
    </script>
}