@model UnivFI.WebUI.Areas.Admin.ViewModels.Role.RoleViewModel

@{
    ViewData["Title"] = "역할 상세 정보";
    var returnPage = (int)(ViewBag.ReturnPage ?? 1);
    var returnPageSize = (int)(ViewBag.ReturnPageSize ?? 10);
    var returnSearchTerm = (string)(ViewBag.ReturnSearchTerm ?? "");
    var returnSearchFields = (string)(ViewBag.ReturnSearchFields ?? "");

    var assignedMenus = ViewBag.AssignedMenus as IEnumerable<dynamic>;
    var assignedUsers = ViewBag.AssignedUsers as IEnumerable<dynamic>;

    // 메뉴와 사용자 목록의 페이징 및 검색 상태
    var menuPage = (int)(ViewBag.MenuPage ?? 1);
    var menuPageSize = (int)(ViewBag.MenuPageSize ?? 10);
    var menuSearchTerm = (string)(ViewBag.MenuSearchTerm ?? "");
    var menuTotalCount = (int)(ViewBag.MenuTotalCount ?? 0);
    var menuTotalPages = (int)Math.Ceiling(menuTotalCount / (double)menuPageSize);

    var userPage = (int)(ViewBag.UserPage ?? 1);
    var userPageSize = (int)(ViewBag.UserPageSize ?? 10);
    var userSearchTerm = (string)(ViewBag.UserSearchTerm ?? "");
    var userTotalCount = (int)(ViewBag.UserTotalCount ?? 0);
    var userTotalPages = (int)Math.Ceiling(userTotalCount / (double)userPageSize);

    var activeTab = ViewBag.ActiveTab ?? "menus"; // 기본 탭은 메뉴
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- 헤더 섹션 -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <a asp-action="Index" asp-route-page="@returnPage" asp-route-pageSize="@returnPageSize"
                        asp-route-searchTerm="@returnSearchTerm" asp-route-searchFields="@returnSearchFields"
                        class="flex items-center text-gray-600 hover:text-blue-600 transition-colors">
                        <i class="fas fa-arrow-left text-lg mr-2"></i>
                        <span>목록으로</span>
                    </a>
                    <h1 class="text-3xl font-bold text-gray-900">@Model.RoleName</h1>
                </div>
                <div class="flex space-x-3">
                    <a asp-action="Edit" asp-route-id="@Model.Id" asp-route-returnPage="@returnPage"
                        asp-route-returnPageSize="@returnPageSize" asp-route-returnSearchTerm="@returnSearchTerm"
                        asp-route-returnSearchFields="@returnSearchFields"
                        class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                        <i class="fas fa-edit mr-2"></i> 수정
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" asp-route-returnPage="@returnPage"
                        asp-route-returnPageSize="@returnPageSize" asp-route-returnSearchTerm="@returnSearchTerm"
                        asp-route-returnSearchFields="@returnSearchFields"
                        class="inline-flex items-center px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                        <i class="fas fa-trash mr-2"></i> 삭제
                    </a>
                </div>
            </div>
        </div>

        <!-- 기본 정보 카드 -->
        <div class="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
            <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
                <h2 class="text-xl font-semibold text-gray-900">기본 정보</h2>
            </div>
            <div class="p-6">
                <dl class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="flex flex-col">
                        <dt class="text-sm font-medium text-gray-500 mb-1">역할 ID</dt>
                        <dd class="text-lg font-medium text-gray-900">@Model.Id</dd>
                    </div>
                    <div class="flex flex-col">
                        <dt class="text-sm font-medium text-gray-500 mb-1">역할명</dt>
                        <dd class="text-lg font-medium text-gray-900">@Model.RoleName</dd>
                    </div>
                    <div class="col-span-full">
                        <dt class="text-sm font-medium text-gray-500 mb-1">설명</dt>
                        <dd class="text-base text-gray-900 bg-gray-50 rounded-md p-4">
                            @(string.IsNullOrEmpty(Model.RoleComment) ? "설명이 없습니다." : Model.RoleComment)
                        </dd>
                    </div>
                </dl>
            </div>
        </div>

        <!-- 탭 컨테이너 -->
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <!-- 탭 헤더 -->
            <div class="border-b border-gray-200">
                <nav class="flex -mb-px" aria-label="Tabs">
                    <button onclick="switchTab('menus')" class="@(activeTab == "menus" 
                                                                                                                                                  ? "border-blue-500 text-blue-600" 
                                                                                                                                                  : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") 
                            w-1/2 py-4 px-1 text-center border-b-2 font-medium text-sm">
                        <i class="fas fa-list-ul mr-2"></i>
                        접근 가능한 메뉴
                        <span class="ml-2 px-2 py-0.5 bg-blue-100 text-blue-800 rounded-full text-xs">
                            @(menuTotalCount)
                        </span>
                    </button>
                    <button onclick="switchTab('users')" class="@(activeTab == "users" 
                                                                                                                                                  ? "border-blue-500 text-blue-600" 
                                                                                                                                                  : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300") 
                            w-1/2 py-4 px-1 text-center border-b-2 font-medium text-sm">
                        <i class="fas fa-users mr-2"></i>
                        할당된 사용자
                        <span class="ml-2 px-2 py-0.5 bg-green-100 text-green-800 rounded-full text-xs">
                            @(userTotalCount)
                        </span>
                    </button>
                </nav>
            </div>

            <!-- 메뉴 탭 콘텐츠 -->
            <div id="menusTab" class="p-6 @(activeTab != "menus" ? "hidden" : "")">
                <!-- 검색 폼 -->
                <div class="mb-4">
                    <div class="flex gap-4">
                        <div class="flex-1">
                            <input type="text" id="menuSearchInput" value="@menuSearchTerm"
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                                placeholder="메뉴명 또는 경로로 검색...">
                        </div>
                        <button type="button" onclick="searchMenus()"
                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <i class="fas fa-search mr-2"></i> 검색
                        </button>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead>
                            <tr class="bg-gray-50">
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    메뉴명
                                </th>
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    경로
                                </th>
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    액션
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @if (assignedMenus != null && assignedMenus.Any())
                            {
                                @foreach (var menu in assignedMenus)
                                {
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                            @menu.Title
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <code class="px-2 py-1 bg-gray-100 rounded text-sm">@menu.Url</code>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <button type="button" onclick="removeMenu(@Model.Id, @menu.Id)"
                                                class="inline-flex items-center px-3 py-1 bg-red-100 text-red-700 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                                                <i class="fas fa-trash-alt mr-1.5"></i> 삭제
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="px-6 py-4 text-center text-gray-500">
                                        검색 결과가 없습니다.
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- 페이지네이션 -->
                @if (menuTotalPages > 1)
                {
                    <div class="mt-4 flex justify-between items-center">
                        <div class="flex items-center space-x-2">
                            <select id="menuPageSize" onchange="changeMenuPageSize(this.value)"
                                class="px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                                <option value="10" selected="@(menuPageSize == 10)">10개씩 보기</option>
                                <option value="20" selected="@(menuPageSize == 20)">20개씩 보기</option>
                                <option value="50" selected="@(menuPageSize == 50)">50개씩 보기</option>
                                <option value="100" selected="@(menuPageSize == 100)">100개씩 보기</option>
                            </select>
                        </div>
                        <div class="flex justify-center space-x-2">
                            @for (var i = 1; i <= menuTotalPages; i++)
                            {
                                <button type="button" onclick="goToMenuPage(@i)"
                                    class="px-3 py-1 @(i == menuPage ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700") rounded-md hover:bg-blue-500 hover:text-white transition-colors">
                                    @i
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- 사용자 탭 콘텐츠 -->
            <div id="usersTab" class="p-6 @(activeTab != "users" ? "hidden" : "")">
                <!-- 검색 폼 -->
                <div class="mb-4">
                    <div class="flex gap-4">
                        <div class="flex-1">
                            <input type="text" id="userSearchInput" value="@userSearchTerm"
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                                placeholder="이름 또는 이메일로 검색...">
                        </div>
                        <button type="button" onclick="searchUsers()"
                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <i class="fas fa-search mr-2"></i> 검색
                        </button>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead>
                            <tr class="bg-gray-50">
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    이름
                                </th>
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    이메일
                                </th>
                                <th scope="col"
                                    class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    액션
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @if (assignedUsers != null && assignedUsers.Any())
                            {
                                @foreach (var user in assignedUsers)
                                {
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div
                                                    class="flex-shrink-0 h-8 w-8 bg-gray-200 rounded-full flex items-center justify-center">
                                                    <span class="text-sm font-medium text-gray-600">
                                                        @(user.Name?[0].ToString().ToUpper())
                                                    </span>
                                                </div>
                                                <div class="ml-4">
                                                    <div class="text-sm font-medium text-gray-900">@user.Name</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <a href="mailto:@user.Email" class="hover:text-blue-600 transition-colors">
                                                @user.Email
                                            </a>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            <button type="button" onclick="removeUser(@Model.Id, @user.Id)"
                                                class="inline-flex items-center px-3 py-1 bg-red-100 text-red-700 rounded-md hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                                                <i class="fas fa-trash-alt mr-1.5"></i> 삭제
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="px-6 py-4 text-center text-gray-500">
                                        검색 결과가 없습니다.
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- 페이지네이션 -->
                @if (userTotalPages > 1)
                {
                    <div class="mt-4 flex justify-between items-center">
                        <div class="flex items-center space-x-2">
                            <select id="userPageSize" onchange="changeUserPageSize(this.value)"
                                class="px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                                <option value="10" selected="@(userPageSize == 10)">10명씩 보기</option>
                                <option value="20" selected="@(userPageSize == 20)">20명씩 보기</option>
                                <option value="50" selected="@(userPageSize == 50)">50명씩 보기</option>
                                <option value="100" selected="@(userPageSize == 100)">100명씩 보기</option>
                            </select>
                        </div>
                        <div class="flex justify-center space-x-2">
                            @for (var i = 1; i <= userTotalPages; i++)
                            {
                                <button type="button" onclick="goToUserPage(@i)"
                                    class="px-3 py-1 @(i == userPage ? "bg-blue-600 text-white" : "bg-gray-100 text-gray-700") rounded-md hover:bg-blue-500 hover:text-white transition-colors">
                                    @i
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function switchTab(tabName) {
            // 현재 URL 가져오기
            const url = new URL(window.location.href);
            const params = url.searchParams;

            // 탭 상태 업데이트
            params.set('activeTab', tabName);

            // URL 업데이트
            window.history.pushState({}, '', url.toString());

            // 탭 표시 상태 변경
            document.getElementById('menusTab').classList.toggle('hidden', tabName !== 'menus');
            document.getElementById('usersTab').classList.toggle('hidden', tabName !== 'users');

            // 탭 버튼 스타일 업데이트
            const buttons = document.querySelectorAll('nav button');
            buttons.forEach(button => {
                const isActive = button.getAttribute('onclick').includes(tabName);
                button.classList.toggle('border-blue-500', isActive);
                button.classList.toggle('text-blue-600', isActive);
                button.classList.toggle('border-transparent', !isActive);
                button.classList.toggle('text-gray-500', !isActive);
            });
        }

        function removeMenu(roleId, menuId) {
            if (confirm('이 역할에서 해당 메뉴에 대한 접근 권한을 삭제하시겠습니까?')) {
                $.ajax({
                    url: '@Url.Action("RemoveMenu", "Role", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        roleId: roleId,
                        menuId: menuId
                    },
                    success: function (result) {
                        if (result.success) {
                            showToast('success', '메뉴 접근 권한이 삭제되었습니다.');
                            location.reload();
                        } else {
                            showToast('error', result.message || '메뉴 접근 권한 삭제 중 오류가 발생했습니다.');
                        }
                    },
                    error: function () {
                        showToast('error', '요청 처리 중 오류가 발생했습니다.');
                    }
                });
            }
        }

        function removeUser(roleId, userId) {
            if (confirm('이 역할에서 해당 사용자를 삭제하시겠습니까?')) {
                $.ajax({
                    url: '@Url.Action("RemoveUser", "Role", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        roleId: roleId,
                        userId: userId
                    },
                    success: function (result) {
                        if (result.success) {
                            showToast('success', '사용자가 역할에서 제거되었습니다.');
                            location.reload();
                        } else {
                            showToast('error', result.message || '사용자 제거 중 오류가 발생했습니다.');
                        }
                    },
                    error: function () {
                        showToast('error', '요청 처리 중 오류가 발생했습니다.');
                    }
                });
            }
        }

        function searchMenus() {
            const searchTerm = document.getElementById('menuSearchInput').value;
            const pageSize = document.getElementById('menuPageSize').value;
            reloadWithParams({ menuSearchTerm: searchTerm, menuPage: 1, menuPageSize: pageSize });
        }

        function searchUsers() {
            const searchTerm = document.getElementById('userSearchInput').value;
            const pageSize = document.getElementById('userPageSize').value;
            reloadWithParams({ userSearchTerm: searchTerm, userPage: 1, userPageSize: pageSize });
        }

        function goToMenuPage(page) {
            reloadWithParams({ menuPage: page });
        }

        function goToUserPage(page) {
            reloadWithParams({ userPage: page });
        }

        function changeMenuPageSize(pageSize) {
            reloadWithParams({ menuPageSize: pageSize, menuPage: 1 });
        }

        function changeUserPageSize(pageSize) {
            reloadWithParams({ userPageSize: pageSize, userPage: 1 });
        }

        function reloadWithParams(newParams) {
            const url = new URL(window.location.href);
            const params = url.searchParams;

            // 기존 파라미터 유지
            params.set('returnPage', '@returnPage');
            params.set('returnPageSize', '@returnPageSize');
            params.set('returnSearchTerm', '@returnSearchTerm');
            params.set('returnSearchFields', '@returnSearchFields');
            params.set('activeTab', params.get('activeTab') || '@activeTab');

            // 현재 상태 유지
            if (!newParams.menuSearchTerm) params.set('menuSearchTerm', '@menuSearchTerm');
            if (!newParams.menuPage) params.set('menuPage', '@menuPage');
            if (!newParams.menuPageSize) params.set('menuPageSize', '@menuPageSize');
            if (!newParams.userSearchTerm) params.set('userSearchTerm', '@userSearchTerm');
            if (!newParams.userPage) params.set('userPage', '@userPage');
            if (!newParams.userPageSize) params.set('userPageSize', '@userPageSize');

            // 새로운 파라미터 적용
            Object.entries(newParams).forEach(([key, value]) => {
                params.set(key, value);
            });

            window.location.href = url.toString();
        }

        // Enter 키로 검색 실행
        document.getElementById('menuSearchInput').addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                searchMenus();
            }
        });

        document.getElementById('userSearchInput').addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                searchUsers();
            }
        });

        // 토스트 메시지 표시 함수
        function showToast(type, message) {
            const toast = $('<div>').addClass('fixed bottom-4 right-4 px-6 py-4 rounded-lg text-white transform transition-all duration-300 translate-y-full')
                .text(message);

            if (type === 'success') {
                toast.addClass('bg-green-600');
            } else {
                toast.addClass('bg-red-600');
            }

            $('body').append(toast);

            // Show animation
            setTimeout(() => {
                toast.removeClass('translate-y-full');
            }, 100);

            // Hide after 3 seconds
            setTimeout(() => {
                toast.addClass('translate-y-full');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }, 3000);
        }
    </script>
}